<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    @* The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags *@
    <title>@ViewBag.Title | the Capitol</title>
    <!-- Google font -->
    <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700%7CVarela+Round" rel="stylesheet">
    @* render css (BundleConfig.cs) *@
    @Styles.Render("~/Content/css")
    <!-- custom style (override template) -->
    <link href="~/Content/css/custom.css" rel="stylesheet" />
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
        <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
</head>
<body>
    @* only apply id="home" on [domain]/Home/Index (index.cshtml-background image) *@
    <header id="@(ViewContext.RouteData.Values["Controller"].ToString() == "Home" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "home" : "")">
        @* render background image on Index.cshtml *@
        @RenderSection("backgroundImage", false)
        <!-- nav -->
        @* nav-transparent only if background image is displayed-[domain]/Home/Index *@
        <nav id="nav" class="navbar @(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "nav-transparent" : "")">
            <div class="container">
                <div class="navbar-header">
                    <!-- collapsed nav menu -->
                    <div class="nav-collapse">
                        <span></span>
                    </div>
                </div>
                <!--  nav links  -->
                <ul class="main-nav nav navbar-nav navbar-right">
                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")">
                        <a href="@Url.Action("Index", "Home")">the <span>Capitol</span></a>
                    </li>
                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Services" ? "active" : "")">
                        <a href="@Url.Action("Services", "Home")">services</a>
                    </li>
                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Team" ? "active" : "")">
                        <a href="@Url.Action("Team", "Home")">our team</a>
                    </li>
                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Media" ? "active" : "")">
                        <a href="@Url.Action("Media", "Home")">media</a>
                    </li>
                    <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                        <a href="@Url.Action("Contact", "Home")">contact</a>
                    </li>
                    @if (Request.IsAuthenticated && User.IsInRole("Leader") || User.IsInRole("Admin"))
                    {
                        //Request.IsAuthenticated will EVENTUALLY represent students/parents (no roles assigned)
                        <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                            <a href="@Url.Action("Index", "Students")">students</a></li>
                            <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                                <a href="@Url.Action("Index", "Leaders")">leaders</a>
                            </li>
                    }
                    @if (User.IsInRole("Admin"))
                    {
                        <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                            <a href="@Url.Action("Index", "RolesAdmin")">roles</a>
                        </li>
                        <li class="@(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")">
                            <a href="@Url.Action("Index", "UsersAdmin")">users</a>
                        </li>
                    }
                    @Html.Partial("_LoginPartial")
                </ul>
            </div>
        </nav>
        @* render "we are..." text on Index.cshtml *@
        @RenderSection("homeWrapper", false)
    </header>

    <div>
        @RenderBody()
    </div>

    <footer id="footer" class="sm-padding bg-dark">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <!-- footer logo -->
                    <div class="footer-logo">
                        <a class="sub-text" href="@Url.Action("Index", "Home")">the <span>Capitol</span></a>
                    </div>
                    <!-- footer follow -->
                    <ul class="footer-follow">
                        <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fa fa-instagram"></i></a></li>
                        <li><a href="#"><i class="fa fa-youtube"></i></a></li>
                    </ul>
                    <!-- copyright -->
                    <div class="footer-copyright">
                        <p>
                            Copyright &copy; @DateTime.Now.Year All Rights Reserved. <br />
                            Original Template by <a href="https://colorlib.com" target="_blank">Colorlib</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    <!-- back to top -->
    <div id="back-to-top"></div>

    <!-- preloader -->
    <div id="preloader">
        <div class="preloader">
            <span></span>
            <span></span>
            <span></span>
            <span></span>
        </div>
    </div>
    @* render scripts (BundleConfig.cs) *@
    @Scripts.Render("~/Scripts/js")
    @RenderSection("scripts", required: false)
</body>
</html>